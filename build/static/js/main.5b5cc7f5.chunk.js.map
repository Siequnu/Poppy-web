{"version":3,"sources":["helpers/auth-header.js","helpers/handle-response.js","config.js","services/authentication.service.js","services/api.service.js","services/axios-fetcher.service.js","components/Auth/PrivateRoute.jsx","components/Auth/Login.jsx","components/Auth/Logout.jsx","components/Auth/ResetWithToken.jsx","components/Auth/Reset.jsx","components/Auth/SignUp.jsx","components/Auth/ConfirmEmail.jsx","components/Navbar/Navbar.jsx","components/TopBar/TopBar.jsx","components/PhotoDivider/PhotoDividerComponent.jsx","components/Home/Home.jsx","components/SplashScreen/SplashScreen.jsx","components/UserMenu/UserHero.jsx","components/UserMenu/UserTabs.jsx","components/UserMenu/UserMenu.jsx","components/Hero/Hero.jsx","components/Collection/PoppyArt.jsx","components/Art/Art.jsx","components/Contact/Contact.jsx","components/Collection/ProductThumbnail.jsx","components/Card/CardComponent.jsx","components/ProductPreviewDialog/ProductPreviewDialog.jsx","components/Collection/Collection.jsx","components/Dashboard/DashboardTabs.jsx","components/Dashboard/DashboardUsers.jsx","components/Dashboard/DeleteDialog.jsx","components/Dashboard/DashboardFeedback.jsx","components/Dashboard/Dashboard.jsx","App.js","serviceWorker.js","interceptors/axios-interceptor.js","index.js"],"names":["authHeader","currentUser","authenticationService","currentUserValue","access_token","Authorization","accessToken","refreshToken","refresh_token","handleResponse","response","text","then","data","JSON","parse","ok","indexOf","status","logout","error","statusText","Promise","reject","config","authLogin","authRefresh","afterLogout","resetWithToken","authSignUp","authValidate","confirmEmail","userProfileUrl","getRoles","getUsers","currentUserSubject","BehaviorSubject","localStorage","getItem","login","removeItem","next","signUp","updateUser","userObject","setItem","stringify","validateRegistration","asObservable","value","username","password","a","requestOptions","method","headers","body","fetch","user","email","validation","token","hasOwnProperty","postApiData","url","values","axios","post","PrivateRoute","Component","component","rest","render","props","to","pathname","state","from","location","withRouter","setSnackbar","React","useContext","SnackbarContext","history","push","formik","useFormik","initialValues","onSubmit","open","severity","catch","className","handleSubmit","TextField","fullWidth","variant","id","name","label","onChange","handleChange","touched","Boolean","errors","type","helperText","Button","color","Link","onClick","useParams","json","success","validate","includes","username_exists","email_exists","Object","entries","map","pop","result","bounceLoaderCss","css","loading","size","SimpleBottomNavigation","useState","setValue","devicePlatform","setDevicePlatform","getDeviceInfo","Device","getInfo","info","platform","BottomNavigation","event","newValue","showLabels","style","paddingBottom","height","BottomNavigationAction","icon","TopBar","paddingTop","RouterLink","src","alt","fontSize","PhotoDividerComponent","backgroundImage","thumbnail","href","endIcon","margin","display","SplashScreen","userProfile","useSWR","isAdmin","jwt_decode","admin","maximised","registered","useStyles","makeStyles","root","flexGrow","CenteredTabs","classes","Paper","Tabs","currentTab","setCurrentTab","indicatorColor","textColor","centered","Tab","UserMenu","currentTabContent","setCurrentTabContent","useEffect","Hero","title","description","comingSoon","link","getCollections","collectionId","collections","caption","items","Art","reverse","collection","index","length","Contact","width","window","innerWidth","innerHeight","recycleConfetti","setRecycleConfetti","confetti","setConfetti","submitted","setSubmitted","setTimeout","enableReinitialize","inquiry","handleNewInquiry","run","recycle","ProductThumbnail","product","i","CardComponent","cards","card","target","rel","textDecoration","Transition","forwardRef","ref","Slide","direction","ActivityPreviewDialog","onClose","Dialog","TransitionComponent","dialogOpen","setDialogOpen","selectedProduct","setSelectedProduct","handleOpenCard","padding","float","startIcon","marginTop","paragraph","DashboardUsers","refreshInterval","autoPageSize","rows","columns","field","headerName","pageSize","DeleteDialog","handleClose","DialogContent","DialogContentText","DialogActions","onConfirm","autoFocus","DashboardInquiries","currentInquiry","setCurrentInquiry","alertDialog","setAlertDialog","sortable","disableClickEventBubbling","renderCell","params","thisRow","api","getAllColumns","c","filter","forEach","f","row","mutate","formData","entry","feedbackObject","inquiryId","Dashboard","createContext","App","splashScreen","setSplashScreen","theme","createTheme","palette","mode","useMediaQuery","primary","main","secondary","typography","h1","fontFamily","join","components","MuiTouchRipple","styleOverrides","child","backgroundColor","snackbar","ThemeProvider","CssBaseline","crossOrigin","Provider","Snackbar","autoHideDuration","Alert","exact","path","Collection","Login","Logout","Reset","SignUp","ConfirmEmail","ResetWithToken","hostname","match","interceptors","use","resolve","originalRequest","refreshTokenString","__isRetryRequest","_retry","refresh","res","reload","ReactDOM","fetcher","get","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b5cc7f5.chunk.js","sourcesContent":["import { authenticationService } from '../services';\n\nexport function authHeader() {\n    // Return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.access_token) {\n        return { Authorization: `Bearer ${currentUser.access_token}` };\n    } else {\n        return {};\n    }\n}\n\nexport function refreshHeader() {\n    // Return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.refresh_token) {\n        return { Authorization: `Bearer ${currentUser.refresh_token}` };\n    } else {\n        return {};\n    }\n}\n\nexport function accessToken() {\n    // Return jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.access_token) {\n        return currentUser.access_token;\n    } else {\n        return {};\n    }\n}\n\nexport function refreshToken() {\n    // Return jwt refresh token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.refresh_token) {\n        return currentUser.refresh_token;\n    } else {\n        return false;\n    }\n}","import { authenticationService } from '../services';\n\n// Handle Sign-in response\nexport function handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if ([401, 403].indexOf(response.status) !== -1) {\n                // Auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                authenticationService.logout();\n                //window.location.reload();\n            }\n            \n            const error = (data && data.error) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}","const config = \n{\n    authLogin: '/auth/login',\n    authRefresh: '/auth/refresh',\n    afterLogout: '/login',\n    resetWithToken: '/auth/reset/token',\n    authSignUp: '/auth/register',\n    authValidate: '/auth/validate',\n    confirmEmail: '/auth/confirm',\n    userProfileUrl: '/auth/profile',\n    \n    getRoles: '/auth/roles',\n    getUsers: '/auth/users/get',\n}\n\nexport default config","import { BehaviorSubject } from 'rxjs';\nimport { handleResponse } from '../helpers';\nimport config from '../config';\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nexport const authenticationService = {\n    login,\n    logout,\n    signUp,\n    updateUser,\n    validateRegistration,\n    confirmEmail,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue() { return currentUserSubject.value }\n};\n\nasync function login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n    };\n\n    const response = await fetch(config.authLogin, requestOptions);\n    const user = await handleResponse(response);\n\n    // Store user details and JWT token in local storage to keep user logged in between page refreshes\n    localStorage.setItem('currentUser', JSON.stringify(user));\n    currentUserSubject.next(user);\n    return user;\n}\n\n\nasync function signUp(username, email, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password, email })\n    };\n\n    const response = await fetch(config.authSignUp, requestOptions);\n    const user = await handleResponse(response);\n\n    return user;\n}\n\nasync function validateRegistration(username, email) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, email })\n    };\n\n    const response = await fetch(config.authValidate, requestOptions);\n    const validation = await handleResponse(response);\n    \n    return validation;\n}\n\nasync function confirmEmail(token) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ token })\n    };\n\n    const response = await fetch(config.confirmEmail, requestOptions);\n    const validation = await handleResponse(response);\n\n    if (validation.hasOwnProperty('success')) {\n        return true;\n    } else {\n        return false\n    }\n}\n\nfunction updateUser(userObject) {\n    localStorage.setItem('currentUser', JSON.stringify(userObject));\n    currentUserSubject.next(userObject);\n}\n\nfunction logout() {\n    // Remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}\n","import { authHeader } from '../helpers';\nimport axios from 'axios';\n\nexport async function postApiData (url, values) {\n    try {\n        const response = await axios.post(url, values, { headers: authHeader() });\n        const data = response.data;\n        return data;\n    } catch (error) {\n        return error;\n    }\n}","import axios from 'axios';\nimport { accessToken } from '../helpers';\n\n// Automatically include token with fetcher\nexport const fetcher = (url) =>\n  axios\n    .get(url, { headers: { Authorization: \"Bearer \" + accessToken() } })\n    .then((res) => res.data);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { authenticationService } from '../../services';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => {\r\n        const currentUser = authenticationService.currentUserValue;\r\n        if (!currentUser) {\r\n            // Not logged in so redirect to login page with the return url\r\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        }\r\n\r\n        // Authorised so return component\r\n        return <Component {...props} />\r\n    }} />\r\n)","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport './Auth.css';\n\nimport { useFormik } from 'formik';\nimport { Button, TextField } from '@mui/material';\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nfunction Login(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    if (authenticationService.currentUserValue) {\n        props.history.push('/app');\n    }\n\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            password: '',\n        },\n        onSubmit: (values) => {\n            authenticationService.login(values.username, values.password)\n                .then(\n                    (response) => {\n                        const { from } = props.location.state || { from: { pathname: \"/\" } };\n                        props.history.push(from);\n\n                        setSnackbar({\n                            text: `Welcome, ${values.username}`,\n                            open: true,\n                            severity: 'success'\n                        })\n                    }\n                ).catch((error) => {\n                    setSnackbar({\n                        text: error || `An error occured.`,\n                        open: true,\n                        severity: 'error'\n                    })\n                });\n        }\n    });\n\n\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    variant=\"standard\"\n                    id=\"username\"\n                    name=\"username\"\n                    label=\"Username\"\n                    value={formik.values.username}\n                    onChange={formik.handleChange}\n                    error={formik.touched.username && Boolean(formik.errors.username)}\n                />\n                <TextField\n                    fullWidth\n                    id=\"password\"\n                    variant=\"standard\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button className=\"SubmitButton\" color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Submit\n                </Button>\n                <Button component={Link} to=\"/reset\" className=\"ResetPasswordButton\">\n                    Forgot password\n                </Button>\n                <Button component={Link} to=\"/register\">\n                    New account\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nimport { Button } from '@mui/material';\n\nimport config from '../../config';\n\nfunction Logout(props) {\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const handleClick = () => {\n\n        setSnackbar({\n            text: `You have logged out.`,\n            open: true,\n            severity: 'success'\n        })\n\n        authenticationService.logout();\n        props.history.push(config.afterLogout);\n    }\n\n    return (\n        <Button variant=\"contained\" onClick={() => handleClick()}>\n            Logout\n        </Button>\n    )\n}\n\nexport default withRouter (Logout);","import React from 'react';\nimport { withRouter, useParams } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\n\nimport { Button, TextField } from '@mui/material';\n\nimport './Auth.css';\n\nimport { SnackbarContext } from '../../App';\n\nimport config from '../../config';\n\nfunction ResetWithToken(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const { token } = useParams();\n\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n        },\n        //validationSchema: validationSchema,\n        onSubmit: (values) => {\n            // Add in the token\n            values.token = token;\n\n            // Fetch the data\n            fetch(config.resetWithToken, {\n                method: 'POST',\n                body: JSON.stringify(values),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.hasOwnProperty('error')) {\n                        throw data.error;\n                    }\n                    setSnackbar({\n                        text: data.success,\n                        open: true,\n                        severity: 'success'\n                    })\n                    \n                    // Show the login screen\n                    props.history.push('/login');\n                })\n                .catch(function (error) {\n                    setSnackbar({\n                        text: error,\n                        open: true,\n                        severity: 'error'\n                    })\n                })\n        },\n    });\n\n    // Display a password reset form\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    variant=\"standard\"\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"New password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button variant=\"contained\" fullWidth type=\"submit\">\n                    Set new password\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(ResetWithToken)","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\n\nimport { Button, TextField } from '@mui/material';\n\nimport { SnackbarContext } from '../../App';\n\nfunction Reset(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n        },\n        onSubmit: (values) => {\n            fetch('/auth/reset', {\n                method: 'POST',\n                body: JSON.stringify(values),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.hasOwnProperty('error')) {\n                        throw data.error;\n                    }\n                    \n                    setSnackbar({\n                        text: data.success,\n                        open: true,\n                        severity: 'success'\n                    })\n\n                    props.history.push('login');\n                    \n                })\n                .catch(function (error) {\n                    \n                    setSnackbar({\n                        text: error,\n                        open: true,\n                        severity: 'error'\n                    })\n\n                })\n        },\n    });\n\n    // Display an email form, to which reset email can be sent\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    variant=\"standard\"\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    type=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    error={formik.touched.email && Boolean(formik.errors.email)}\n                    helperText={formik.touched.email && formik.errors.email}\n                />\n\n                <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Send password reset email\n                </Button>\n\n                <Button component={Link} to=\"/login\">\n                    Back to Login\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(Reset)","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport './Auth.css';\n\nimport { useFormik } from 'formik';\nimport { Button, TextField } from '@mui/material';\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nfunction SignUp(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    if (authenticationService.currentUserValue) {\n        props.history.push('/');\n    }\n\n    // Async validation\n    const validate = async (values, props) => {\n        const validation = await authenticationService.validateRegistration(values.username, values.email);\n        \n        const errors = {};\n        \n        if (['admin', 'null', 'god'].includes(values.username)) {\n            errors.username = 'Please choose a different username';\n        }\n        if (validation.username_exists)\n            errors.username = 'This username is already taken';\n        if (validation.email_exists)\n            errors.email = 'This email is already registered';\n\n        Object.entries(errors).map(error => {\n            setSnackbar({\n                text: error.pop(),\n                open: true,\n                severity: 'warning'\n            })\n            return true\n        })\n        \n        return errors;\n    };\n\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            email: '',\n            password: '',\n        },\n        onSubmit: (values) => {\n            authenticationService.signUp(values.username, values.email, values.password)\n                .then(\n                    (user) => {\n                        props.history.push('/login');\n\n                        setSnackbar({\n                            text: `An email has been sent to ${values.email}. Please open it to continue.`,\n                            open: true,\n                            severity: 'success'\n                        })\n                    }\n                );\n        },\n        validate: validate,\n    });\n\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    variant=\"standard\"\n                    id=\"username\"\n                    name=\"username\"\n                    label=\"Username\"\n                    value={formik.values.username}\n                    onChange={formik.handleChange}\n                    error={formik.touched.username && Boolean(formik.errors.username)}\n                />\n                <TextField\n                    fullWidth\n                    variant=\"standard\"\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    error={formik.touched.email && Boolean(formik.errors.email)}\n                />\n                <TextField\n                    fullWidth\n                    variant=\"standard\"\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button className=\"SubmitButton\" color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Submit\n                </Button>\n                <Button component={Link} to=\"/login\" className=\"ResetPasswordButton\">\n                    Back to log-in\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(SignUp);","import React from 'react';\nimport { withRouter, useParams } from 'react-router-dom';\n\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nfunction ConfirmEmail(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const { token } = useParams();\n     \n    authenticationService.confirmEmail(token)\n        .then((result) => {\n            const message = ( result ? `Your email has been confirmed. You can now log-in.` : `We could not confirm your email.`)\n            setSnackbar({\n                text: message,\n                open: true,\n                severity: ( result ? 'success' : 'error')\n            })  \n            props.history.push('/login');    \n        })\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    return (\n        <BounceLoader color='#213459' loading={true} css={bounceLoaderCss} size={100} />\n    )\n}\n\nexport default withRouter(ConfirmEmail);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Navbar.css';\n\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n\nimport HomeIcon from '@mui/icons-material/Home';\nimport BubbleChartIcon from '@mui/icons-material/BubbleChart';\nimport MessageIcon from '@mui/icons-material/Message';\n\nimport { Device } from '@capacitor/device';\n\nexport default function SimpleBottomNavigation() {\n    const [value, setValue] = React.useState(0);\n\n    const [devicePlatform, setDevicePlatform] = React.useState('web')\n    const getDeviceInfo = async () => {\n      const info = await Device.getInfo();\n      setDevicePlatform(info.platform)\n    };\n    getDeviceInfo()\n  \n    return (\n      <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        showLabels\n        className=\"navbar\"\n        style={{\n          paddingBottom : devicePlatform === 'web' ? '0' : '20px',\n          height: devicePlatform === 'web' ? 'auto' : '80px'\n          }}\n      >\n        <BottomNavigationAction component={Link} to=\"/\" label=\"Poppy\" icon={<HomeIcon />} />\n        <BottomNavigationAction component={Link} to=\"/art\" label=\"Art\" icon={<BubbleChartIcon />} />\n        <BottomNavigationAction component={Link} to=\"/contact\" label=\"Inquiry\" icon={<MessageIcon />} />\n        \n      </BottomNavigation>\n    );\n  }\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@mui/material';\n\nimport './TopBar.css';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nimport { Device } from '@capacitor/device';\n\nexport default function TopBar(props) {\n\n  const [devicePlatform, setDevicePlatform] = React.useState('web')\n  const getDeviceInfo = async () => {\n    const info = await Device.getInfo();\n    setDevicePlatform(info.platform)\n  };\n  getDeviceInfo()\n\n  return (\n    <div className=\"TopBar\" style={{\n        paddingTop : devicePlatform === 'web' ? '0' : '35px',\n        height: devicePlatform === 'web' ? '75px' : '75px'\n        }}\n      >\n      <Link component={RouterLink} to=\"/\" className=\"AccountLink\">\n        <img className=\"MyoLogo\" src=\"/apple-touch-icon.png\" alt=\"Myo app logo\" />\n      </Link>\n      <p className=\"MyoText\"></p>\n      <Link component={RouterLink} to=\"/user\" className=\"AccountLink\">\n        <AccountCircleIcon fontSize=\"large\" className=\"AccountCircle\" />\n      </Link>\n    </div>\n  )\n}\n\n","import React from 'react';\nimport './PhotoDividerComponent.css';\n\nexport default function PhotoDividerComponent(props) {\n    return (\n        <div className=\"PhotoDividerComponent\" style={{backgroundImage: `url(\"${props.thumbnail}\"`}}></div>\n    )\n}","/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react'\nimport { Link, withRouter } from 'react-router-dom';\n\nimport PhotoDividerComponent from '../PhotoDivider/PhotoDividerComponent';\n\nimport Button from '@mui/material/Button';\n\nimport { Element } from 'react-scroll'\n\nimport LocalFireDepartmentIcon from '@mui/icons-material/LocalFireDepartment';\nimport BubbleChartIcon from '@mui/icons-material/BubbleChart';\nimport MemoryIcon from '@mui/icons-material/Memory';\nimport LocalFloristIcon from '@mui/icons-material/LocalFlorist';\n\nimport './Home.css';\n\nfunction Home(props) {\n\n  const getRandomThumbnail = () => `/nft-background.jpeg`\n\n  return (\n    <>\n\n      <h1>Poppy</h1>\n      \n      <a className=\"ButtonLink\" href=\"https://opensea.io/POPPIES\">\n      <Button size=\"Large\" variant=\"contained\" endIcon={<LocalFloristIcon />}> Our OpenSea store</Button>\n      </a>\n  \n      <PhotoDividerComponent thumbnail={getRandomThumbnail()} style={{ margin: '200px', display: 'block' }} />\n\n      <Element name=\"about\" className=\"element\">\n        <div className=\"secondary-text\">\n          <h2>We are an art collective</h2>\n          <div className=\"icon-grid\">\n            <div className=\"icon-grid-item\">\n              <LocalFireDepartmentIcon className=\"icon\" />\n              <p>We are a small group of artists from 4 continents.</p>\n            </div>\n            <div className=\"icon-grid-item\">\n              <BubbleChartIcon className=\"icon\" />\n              <p>We are commited to digital art.</p>\n            </div>\n            <div className=\"icon-grid-item\">\n              <MemoryIcon className=\"icon\" />\n              <p>We seek to provoke, educate, and challenge.</p>\n            </div>\n          </div>\n        </div>\n\n        <Button component={Link} to=\"/art\" size=\"Large\" variant=\"contained\" endIcon={<LocalFloristIcon />}> Take a look at our art</Button>\n      </Element>\n\n      <PhotoDividerComponent thumbnail={getRandomThumbnail()} style={{ margin: '200px', display: 'block' }} />\n    </>\n  )\n}\n\nexport default withRouter(Home)","import React, { Suspense } from 'react';\nimport './SplashScreen.css';\n\nimport 'animate.css'\n\nexport default function SplashScreen() {\n  return (\n    <div className=\"SplashScreen\">\n      <div className=\"SplashScreenWrapper\">\n        <Suspense>\n          <img src=\"/apple-touch-icon.png\" alt=\"Poppy icon\" />\n        </Suspense>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport './UserHero.css';\nimport { withRouter } from 'react-router-dom';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport Button from '@mui/material/Button';\n\nimport Logout from '../Auth/Logout';\nimport config from '../../config';\n\nimport { authenticationService } from '../../services';\nimport jwt_decode from \"jwt-decode\";\n\nexport function UserHero(props) {\n\n    const { data: userProfile } = useSWR(config.userProfileUrl)\n    \n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    if (!userProfile) return <BounceLoader color={\"#213459\"} loading={true} css={bounceLoaderCss} size={100} />\n    \n    const thumbnail = '/assets/tsinghua1.jpeg'\n\n    const currentUser = authenticationService.currentUserValue;\n    const decodedToken = jwt_decode(currentUser.access_token)\n    const isAdmin = decodedToken.admin\n\n    const redirectToDashboard = () => {props.history.push('dashboard');}\n\n    return (\n        <div className=\"UserHero\" style={{ backgroundImage: `url(\"${thumbnail}\"` }}>\n            <div className=\"UserHeroContent\" style={{ 'background': `linear-gradient(90deg, rgba(131,255,231,1) 40%, rgba(255,255,255,0) 90%)` }}>\n                \n                {props.maximised ? \n                    <>\n                        <Logout className=\"UserHeroLink\" />\n                        {isAdmin ? \n                            <Button color=\"primary\" variant=\"contained\" onClick={redirectToDashboard}>Dashboard</Button>\n                        : null\n                        }\n                    </>\n                : \n                    null \n                }\n\n                <h1>{userProfile.username}</h1>\n                \n                {props.maximised ?\n                <>\n                    <p><AccountCircleIcon className=\"Icon\" /> Member since:</p>\n                    <p className=\"caption\">{userProfile.registered}</p>\n\n                    <span className=\"stamp is-nope\">{isAdmin ? 'Admin' : 'Member' }</span>\n                </>\n                : \n                    null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(UserHero);","import React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Paper from '@mui/material/Paper';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nexport default function CenteredTabs(props) {\n    const classes = useStyles();\n\n    const handleChange = (event, newValue) => {\n        props.setCurrentTab(newValue);\n    };\n\n    return (\n        <Paper className={classes.root}>\n            <Tabs\n                value={props.currentTab}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                centered\n            >\n                <Tab label=\"My account\" />\n            </Tabs>\n        </Paper>\n    );\n}","import React from 'react';\nimport './UserMenu.css';\n\nimport UserHero from './UserHero';\nimport UserTabs from './UserTabs';\n\nexport default function UserMenu() {\n\n    const [currentTab, setCurrentTab] = React.useState(0)\n    const [currentTabContent, setCurrentTabContent] = React.useState(null)\n    \n    React.useEffect(() => {\n        const tabContent = () => {\n            switch (currentTab) {\n                case 0:\n                    return <UserHero maximised={true}/>\n                default:\n                    return <UserHero maximised={true} />\n            }\n        }\n        setCurrentTabContent (tabContent)\n    }, [currentTab])\n\n    return (\n        <div className=\"UserMenu\">\n            <UserTabs currentTab={currentTab} setCurrentTab={setCurrentTab}/>\n            {currentTabContent}\n        </div>\n    )\n}","import React from 'react';\nimport './Hero.css';\n\nimport { Link } from 'react-router-dom';\n\nimport Button from '@mui/material/Button';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n\nexport default function Hero(props) {\n\n    return (\n        <div className=\"Hero\" style={{ backgroundImage: `url(\"${props.thumbnail}\"` }}>\n            <div className=\"HeroContent\" style={{ 'background': `linear-gradient(90deg, rgba(200,34,130,1) 35%, rgba(255,255,255,0) 64%)` }}>\n                <h1>{props.title}</h1>\n                <p>{props.description}</p>\n\n                {\n                    props.comingSoon ?\n                        <span className=\"stamp is-nope\">Coming soon</span>\n                        :\n                        <Button component={Link} to={props.link} size=\"Large\" style={{ margin: '10px' }} variant=\"contained\" endIcon={<ChevronRightIcon />}> View collection</Button>\n                }\n            </div>\n        </div>\n    )\n}","\nexport function getCollections(collectionId = false) {\n\n    // Collections are indexed from 0\n    const id = (collectionId ? collectionId - 1 : false)\n\n    const collections = [\n        {\n            title: 'The Iconic McLaren Senna Collection',\n            caption: \"The highly collectible 2017 sports car reimagined for the metaverse.\",\n            url: 'https://opensea.io/collection/mclaren-senna',\n            thumbnail: \"https://lh3.googleusercontent.com/C89fBczQt7I_BUvLoy5gUSZZlFhoQE-ey93nbt5ZNjOxiQ9MAvih70u_3XU3XZ7WgvjgqqLGu1UtF2-wH0ZIpcqpYCOOuR4-VnuJ=w403\",\n            description: [\n                \"McLaren’s highly collectible 2017 Senna limited-production sports car reimagined for the metaverse.\",\n                \"Created with the collector in mind, these stunning original and authenticated digital recreations of McLaren's Senna capture the essence of true memorabilia.\"\n            ],\n            items: [\n                {\n                    title: 'The Midnight Purple McLaren Senna',\n                    thumbnail: 'https://lh3.googleusercontent.com/RiJea_h7GVhlBvzJX2VMbEkIOsg8jVw9H92H_JcR3QD1yNZe554J2HOwIRPGkhqj3qyOC1grn7CYn43UIAjKCYVfpz7bpET6QOo7wA=w289',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950989341295640577',\n                },\n                {\n                    title: 'The Electric Blue McLaren Senna',\n                    thumbnail: 'https://lh3.googleusercontent.com/AFPPL3pwzlFFC0gVUIXv2e1Dqdq11c0tpIKpHFOfg_BzzgPoP1sPpLqGPY8An_HCCVt5U7Pd2hTLLnidTL1pd4upIYOr7iGj-IAs=w289',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950958554970062849',\n                },\n                {\n                    title: 'The Bumblebee Yellow McLaren Senna',\n                    thumbnail: 'https://lh3.googleusercontent.com/8y8yOdm6KI_74iinGsq_TLIZJN-928AjaMMWrKBZOrvb3NU7IkhCge7wlMgtnLFvDtJT8-gJYIuOWxpLlKqezGjP9XEnfuW58SYmxA=w289',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950986042760757249',\n                },\n                {\n                    title: 'The Ghost White McLaren Senna',\n                    thumbnail: 'https://lh3.googleusercontent.com/nga8x-pYDqbKlVlUiiFx0CB6roGBn2ERDOwKsLouzNVQgNkMAIHlaKXV0IL99-hTZqBohn6q57IB_UIFZTwN4yhPGNP3mnW7KgK0mtU=w289',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950955256435179521',\n                },\n                {\n                    title: 'The Carbon Black McLaren Senna',\n                    thumbnail: 'https://lh3.googleusercontent.com/93dCFE0AbxXtjBLWb9aKvsd0NuAOvfZwp3qkH9nOL1qimhimX-taZsZG8nD2i0LDpdaKXf2-jRRXatw1qXQjzc1TeneCDyylhVt5Xg=w289',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950991540318896129',\n                },\n                {\n                    title: 'The Fire Red McLaren Senna',\n                    thumbnail: 'https://lh3.googleusercontent.com/C89fBczQt7I_BUvLoy5gUSZZlFhoQE-ey93nbt5ZNjOxiQ9MAvih70u_3XU3XZ7WgvjgqqLGu1UtF2-wH0ZIpcqpYCOOuR4-VnuJ=w289',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950965152039829505',\n                },\n            ]\n        },\n\n\n        {\n            title: 'POPPY 2021 NFT Christmas Cards',\n            caption: \"Why not make it a real 2021 Christmas by owning an exclusive NFT Christmas Card!\",\n            url: 'https://opensea.io/collection/christmas-card-2021',\n            thumbnail: \"https://lh3.googleusercontent.com/uR1bMxd3GmS53ZAV3z6Bm_wuMgZRIKjLffxAVhgKmhjaNs6-NrRWmBJi0EUeXuJx9n_cs9I36KsnBA9ikR9BgkVRbniwfW31iCPQtg=w540\",\n            description: [\n                \"Why not make it a real 2021 Christmas by owning an exclusive NFT Christmas Card!\"\n            ],\n            items: [\n                {\n                    title: '2021 Cambridge Christmas Card',\n                    thumbnail: 'https://lh3.googleusercontent.com/NxUcF1Q6C_BO9jsULxF9aRCweY6Mud57PCKA7hUGEScSoHNzSPwkR1UOpqTcYMB9apcBaGqCTMsiUrKODzP6Eu8kk50qMDQcAGF0=w600',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950992639830523905',\n                },\n                {\n                    title: '2021 Grumpy Cat Christmas Card',\n                    thumbnail: '/assets/gifs/card23.gif',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950984943249129473',\n                },\n                {\n                    title: '2021 Hohoho Christmas Card',\n                    thumbnail: '/assets/gifs/card22.gif',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950982744225873921',\n                },\n                {\n                    title: '2021 The Cat Christmas Card',\n                    thumbnail: '/assets/gifs/card21.gif',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950981644714246145',\n                },\n                {\n                    title: '2021 Santa Vibes Christmas Card',\n                    thumbnail: '/assets/gifs/card20.gif',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950980545202618369',\n                },\n                {\n                    title: '2021 Snowy Train Christmas Card',\n                    thumbnail: '/assets/gifs/card19.gif',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950979445690990593',\n                },\n                {\n                    title: '2021 Hoppy Santa Christmas Card',\n                    thumbnail: '/assets/gifs/card18.gif',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950978346179362817',\n                }\n            ]\n        },\n        {\n            title: 'The Book of Meta, Chapter 1',\n            caption: \"A world first dynamic NFT - the Book of Meta. Only the owner can see what is in the book. And each owner can leave a message in the book.\",\n            url: 'https://opensea.io/collection/christmas-card-2021',\n            thumbnail: \"https://i.redd.it/tvx2nu84i7z01.jpg\",\n            comingSoon: true,\n            description: [\n                \"A world first dynamic NFT - the Book of Meta. Only the owner can see what is in the book. And each owner can leave a message in the book.\",\n                \"What message will you find in this book?\"\n            ],\n            items: [\n\n            ]\n        },\n        {\n            title: 'Digital dreamers',\n            caption: \"Digital abstract painting. Unique, collectible, generative digital art.\",\n            url: 'https://opensea.io/collection/digital-dreamers',\n            thumbnail: \"/assets/digital_dreamers/header.gif\",\n            description: [\n                \"Digital abstract painting - how do androids dream? We attempted to find out\"\n            ],\n            items: [\n                {\n                    title: 'Lithe dream',\n                    thumbnail: '/assets/digital_dreamers/dream1.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950993739342151681',\n                },\n                {\n                    title: 'Adamant dream',\n                    thumbnail: '/assets/digital_dreamers/dream2.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950994838853779457',\n                },\n                {\n                    title: 'Immutable dream',\n                    thumbnail: '/assets/digital_dreamers/dream3.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950995938365407233',\n                },\n                {\n                    title: 'Evasive dream',\n                    thumbnail: '/assets/digital_dreamers/dream4.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950997037877035009',\n                },\n                {\n                    title: 'Astute dream',\n                    thumbnail: '/assets/digital_dreamers/dream5.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950998137388662785',\n                },\n                {\n                    title: 'Egress dream',\n                    thumbnail: '/assets/digital_dreamers/dream6.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497950999236900290561/',\n                },\n                {\n                    title: 'Amalgamated dream',\n                    thumbnail: '/assets/digital_dreamers/dream7.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951000336411918337/',\n                },\n                {\n                    title: 'Vexed dream',\n                    thumbnail: '/assets/digital_dreamers/dream8.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951001435923546113/',\n                },\n                {\n                    title: 'Obdurate dream',\n                    thumbnail: '/assets/digital_dreamers/dream9.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951002535435173889/',\n                },\n                {\n                    title: 'Husk dream',\n                    thumbnail: '/assets/digital_dreamers/dream10.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951003634946801665/',\n                },\n                {\n                    title: 'Discrete dream',\n                    thumbnail: '/assets/digital_dreamers/dream11.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951004734458429441/',\n                },\n                {\n                    title: 'Expostulate dream',\n                    thumbnail: '/assets/digital_dreamers/dream12.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951005833970057217/',\n                },\n                {\n                    title: 'Opprobrius dream',\n                    thumbnail: '/assets/digital_dreamers/dream13.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951006933481684993/',\n                },\n                {\n                    title: 'Ossified dream',\n                    thumbnail: '/assets/digital_dreamers/dream14.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951008032993312769/',\n                },\n                {\n                    title: 'Endemic dream',\n                    thumbnail: '/assets/digital_dreamers/dream15.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951009132504940545',\n                },\n            ]\n        },\n        {\n            title: 'The Planets of Meta',\n            caption: \"Pixelated visions of our future oasis. Collectible and unique NFT art.\",\n            url: 'https://opensea.io/collection/the-planets-of-meta',\n            thumbnail: \"/assets/planets/screens.gif\",\n            description: [\n                \"Digital abstract painting - how do androids dream? We attempted to find out\"\n            ],\n            items: [\n                {\n                    title: 'Pith',\n                    thumbnail: '/assets/planets/card00021.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951010232016568321',\n                },\n                {\n                    title: 'Brook',\n                    thumbnail: '/assets/planets/card00020.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951011331528196097/',\n                },\n                {\n                    title: 'Paean',\n                    thumbnail: '/assets/planets/card00018.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951012431039823873/',\n                },\n                {\n                    title: 'Aver',\n                    thumbnail: '/assets/planets/card00017.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951013530551451649/',\n                },\n                {\n                    title: 'Tautol',\n                    thumbnail: '/assets/planets/card00016.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951014630063079425/',\n                },\n                {\n                    title: 'Rift',\n                    thumbnail: '/assets/planets/card00008.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951015729574707201/',\n                },\n                {\n                    title: 'Obdur',\n                    thumbnail: '/assets/planets/card00007.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951016829086334977/',\n                },\n                {\n                    title: 'Penur',\n                    thumbnail: '/assets/planets/card00006.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951017928597962753/',\n                },\n                {\n                    title: 'Excins',\n                    thumbnail: '/assets/planets/card00004.png',\n                    url: 'https://opensea.io/assets/0x495f947276749ce646f68ac8c248420045cb7b5e/45817393092005930444668747326878441749376301525675786550497951019028109590529/',\n                },\n               \n            ]\n        }\n    ]\n\n\n    // Return selected collection, or all of them\n    return (collectionId ? collections[id] : collections)\n}","import './Art.css'\n\nimport Hero from '../Hero/Hero';\n\nimport { getCollections } from '../Collection/PoppyArt';\n\nexport default function Art() {\n\n  const collections = getCollections();\n\n  return (\n    <div className=\"ViewActivitiesComponent\">\n      {collections.reverse().map((collection, index) =>\n        <Hero key={index} title={collection.title} description={collection.caption} thumbnail={collection.thumbnail} link={'/collection/' + (collections.length - index)} comingSoon={collection.comingSoon} />\n      )}\n    </div>\n  )\n}","import React from 'react';\nimport './Contact.css';\n\nimport { useFormik } from 'formik';\n\nimport { TextField, Button } from '@mui/material';\n\nimport { SnackbarContext } from '../../App';\n\nimport { postApiData } from '../../services/api.service';\n\nimport Confetti from 'confetti-react'\n\nexport default function Contact() {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const [recycleConfetti, setRecycleConfetti] = React.useState (true)\n    const [confetti, setConfetti] = React.useState(false)\n    const [submitted, setSubmitted] = React.useState(false)\n\n    React.useEffect(() => {\n        if (submitted) {\n            setConfetti(true);\n            setTimeout(() => {\n                setRecycleConfetti(false);\n            }, 3000);\n            setTimeout(() => {\n                setConfetti(false);\n            }, 10000);\n        }\n    }, [submitted]);\n\n    var initialValues = {\n        name: '',\n        email: '',\n        inquiry: ''\n    }\n\n    const handleNewInquiry = (values) => {\n        setSubmitted(true);\n        postApiData('/api/inquiries/add', values).then(\n          response => setSnackbar({\n            text: response.success || response.error,\n            open: true,\n            severity: (response.success ? 'success' : 'error')\n          })\n        )\n      };\n\n    const formik = useFormik({\n        enableReinitialize: true,\n        initialValues: initialValues,\n        onSubmit: (values) => {\n            handleNewInquiry(values);\n        },\n    });\n\n    if (submitted) {\n        return <div>\n            <Confetti\n                width={width}\n                height={height}\n                run={confetti}\n                recycle={recycleConfetti}\n            />\n            <h1>Let's talk soon.</h1>\n        </div>\n    }\n    \n    return (\n        <div>\n            <h1>Get in touch!</h1>\n            <form onSubmit={formik.handleSubmit} style={{'margin': '20px'}}>\n                <TextField\n                    id=\"name\"\n                    name=\"name\"\n                    variant=\"standard\"\n                    label=\"Your name\"\n                    value={formik.values.name}\n                    onChange={formik.handleChange}\n                />\n                <TextField\n                    id=\"email\"\n                    variant=\"standard\"\n                    name=\"email\"\n                    label=\"Your email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                />\n                <TextField\n                    fullWidth\n                    id=\"inquiry\"\n                    variant=\"standard\"\n                    name=\"inquiry\"\n                    label=\"Your inquiry\"\n                    value={formik.values.inquiry}\n                    onChange={formik.handleChange}\n                />\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={{'margin': '20px'}}>\n                    Submit\n                </Button>\n            </form>\n        </div>\n    )\n}","import React from \"react\"\n\nexport default function ProductThumbnail(props) {\n    return (\n        <div className=\"ProductThumbAndTitle\">\n            <img className=\"ProductThumbnail\" src={props.product.thumbnail} alt=\"Product preview\" onClick={() => props.onClick(props.i)} />\n            <h5>{props.product.title}</h5>\n        </div>\n    )\n}","import React from 'react';\nimport './CardComponent.css'\n\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n\nfunction CardComponent(props) {\n\n    return (\n        <div className=\"cardComponent\">\n            {props.cards.map((card, i) => (\n\n                <div className=\"card\" key={i} style={{ margin: props.margin }}>\n\n                    <div className=\"card-image\">\n                        <img src={card.thumbnail} alt=\"Header decoration\" />\n                    </div>\n\n                    <div className=\"content\" style={{ height: props.height ? props.height : '200px' }}>\n                        <h4>{card.title}</h4>\n                        <p>{card.description}</p>\n                    </div>\n\n                    <a href={card.url} target=\"_blank\" rel=\"noreferrer\" className=\"read-more\" style={{ textDecoration: 'none' }}>\n                        <span>Buy now <ChevronRightIcon className=\"chevron-right\" /></span>\n                    </a>\n\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default CardComponent;","import React from 'react';\nimport Slide from '@mui/material/Slide';\nimport Dialog from '@mui/material/Dialog';\n\nimport CardComponent from '../Card/CardComponent';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function ActivityPreviewDialog(props) {\n  const { onClose, product, open } = props;\n\n  return (\n    <Dialog onClose={onClose} open={open} TransitionComponent={Transition}>\n      <CardComponent cards={[product]} margin={0} height=\"auto\" />\n    </Dialog>\n  );\n}","import { useState } from 'react';\nimport { Link, withRouter, useParams } from 'react-router-dom';\n\nimport PhotoDividerComponent from '../PhotoDivider/PhotoDividerComponent';\nimport Button from '@mui/material/Button';\n\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n\nimport { getCollections } from './PoppyArt';\n\nimport './Collection.css';\n\nimport './ProductThumbnail.css';\nimport ProductThumbnail from './ProductThumbnail';\nimport ProductPreviewDialog from '../ProductPreviewDialog/ProductPreviewDialog';\n\nfunction Collection() {\n\n    const { collectionId } = useParams();\n\n    const getRandomThumbnail = () => `/nft-background.jpeg`\n\n    const collection = getCollections(collectionId);\n\n    const [dialogOpen, setDialogOpen] = useState(false)\n    const [selectedProduct, setSelectedProduct] = useState([])\n\n    const handleOpenCard = (i) => {\n        setSelectedProduct(collection.items[i])\n        setDialogOpen(true)\n    }\n\n\n    return (\n        <div className=\"CollectionComponent\" style={{ padding: '10px' }}>\n\n            <ProductPreviewDialog product={selectedProduct} open={dialogOpen} onClose={() => setDialogOpen(false)} />\n\n            <Button component={Link} to=\"/art\" size=\"Large\" style={{ margin: '10px 40px 40px 0', float: 'left' }} variant=\"contained\" startIcon={<ArrowBackIosIcon />}> Back to collections</Button>\n            <br />\n            <br />\n\n            <h2 style={{ marginTop: '35px'}}>{collection.title}</h2>\n\n            {collection.description.map((paragraph, index) => <p key={index}>{paragraph}</p>)}\n\n            <Button component={Link} to={{ pathname: collection.url }} target=\"_blank\" size=\"Large\" style={{ margin: '40px' }} variant=\"contained\" endIcon={<ChevronRightIcon />}> View the entire collection on OpenSea</Button>\n\n            <div className=\"ProductWrapper\">\n                <div className=\"ProductCards\">\n                    {collection.items.map((product, i) => <ProductThumbnail product={product} key={i} i={i} onClick={handleOpenCard} />)}\n                </div>\n            </div>\n\n            <PhotoDividerComponent thumbnail={getRandomThumbnail()} style={{ margin: '200px', display: 'block' }} />\n        </div>\n    )\n}\n\nexport default withRouter(Collection)","import React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Paper from '@mui/material/Paper';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nexport default function CenteredTabs(props) {\n    const classes = useStyles();\n\n    const handleChange = (event, newValue) => {\n        props.setCurrentTab(newValue);\n    };\n\n    return (\n        <Paper className={classes.root}>\n            <Tabs\n                value={props.currentTab}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                centered\n            >\n                <Tab label=\"Users\" />\n                <Tab label=\"Feedback\" />\n            </Tabs>\n        </Paper>\n    );\n}","import React from 'react';\n\nimport { DataGrid } from '@mui/x-data-grid';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport config from '../../config';\n\nexport default function DashboardUsers() {\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 70 },\n        { field: 'username', headerName: 'Username', width: 200 },\n        { field: 'registered', headerName: 'Registered', width: 300 },\n        { field: 'last_seen', headerName: 'Last seen', width: 300 },\n    ];\n\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    const { data } = useSWR(config.getUsers, { refreshInterval: 2 })\n    if (!data) return <BounceLoader color={\"#10253E\"} loading={true} css={bounceLoaderCss} size={100} />\n\n    return (\n        <div className=\"DashboardUsers\">\n\n            <h1>Users</h1>\n\n            <div className=\"DataGridContainer\" style={{ height: '600px' }}>\n                <DataGrid\n                    autoPageSize\n                    rows={data}\n                    columns={columns}\n                    pageSize={10}\n                    className=\"UsersGrid\"\n                />\n            </div>\n\n        </div>\n    );\n}","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText } from '@mui/material';\n\nexport default function DeleteDialog(props) {\n\n    const handleClose = () => {\n        props.onClose();\n    }\n\n    const handleConfirm = () => {\n        props.onConfirm(props.inquiry.id);\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    Are you sure you want to delete this inquiry from {props.inquiry.name}?\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={handleConfirm} color=\"primary\" autoFocus>\n                    Delete\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}","import React from 'react';\n\nimport { DataGrid } from '@mui/x-data-grid';\nimport Button from '@mui/material/Button';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\n\nimport { postApiData } from '../../services/api.service';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport DeleteDialog from './DeleteDialog';\n\nimport { SnackbarContext } from '../../App';\n\nexport default function DashboardInquiries() {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    // Store the current inquiry in state for dialogs to access\n    const [currentInquiry, setCurrentInquiry] = React.useState({});\n\n    // Save state for delete dialog\n    const [alertDialog, setAlertDialog] = React.useState(false)\n\n    // API handlers for deleting an inquiry\n    const handleDeleteInquiry = (inquiryId) => {\n        postApiData('/api/inquiries/delete', { id: inquiryId }).then(\n            response => setSnackbar({\n                text: response.success || response.error,\n                open: true,\n                severity: (response.success ? 'success' : 'error')\n            })\n        );\n        setAlertDialog(false)\n        mutate();\n    }\n\n    const handleDeleteAll = () => {\n        postApiData('/api/inquiries/delete/all', {}).then(\n            response => setSnackbar({\n                text: response.success || response.error,\n                open: true,\n                severity: (response.success ? 'success' : 'error')\n            })\n        );\n        setAlertDialog(false)\n        mutate();\n    }\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 150 },\n        { field: 'name', headerName: 'Name', width: 70 },\n        { field: 'email', headerName: 'Email', width: 200 },\n        { field: 'inquiry', headerName: 'Inquiry', width: 300 },\n        {\n            field: \"\",\n            headerName: \"Actions\",\n            sortable: false,\n            width: 120,\n            disableClickEventBubbling: true,\n            renderCell: (params) => {\n\n                const getFields = () => {\n                    return params.api\n                        .getAllColumns()\n                        .map((c) => c.field)\n                        .filter((c) => c !== \"__check__\" && !!c);\n                }\n\n                const onDelete = () => {\n                    const thisRow = {};\n                    getFields().forEach((f) => {\n                        thisRow[f] = params.row[f];\n                    });\n                    setCurrentInquiry(thisRow);\n                    setAlertDialog(true);\n                };\n\n                return (\n                    <div>\n                        <Button onClick={onDelete}><DeleteOutlineIcon /></Button>\n                    </div>\n                )\n            }\n        },\n    ];\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    const { data, mutate } = useSWR('/api/inquiries/get', { refreshInterval: 2 })\n    if (!data) return <BounceLoader color={\"#10253E\"} loading={true} css={bounceLoaderCss} size={100} />\n\n    const formData = data.map(entry => {\n        var feedbackObject = JSON.parse(entry.inquiry)\n        feedbackObject.id = entry.id\n        return feedbackObject\n    })\n\n    return (\n        <div className=\"DashboardUsers\">\n\n<DeleteDialog inquiry={currentInquiry} open={alertDialog} onConfirm={handleDeleteInquiry} onClose={() => setAlertDialog(false)} />\n\n            <h1>Inquiries</h1>\n\n            <div className=\"DataGridContainer\" style={{ height: '600px' }}>\n                <DataGrid\n                    autoPageSize\n                    rows={formData}\n                    columns={columns}\n                    pageSize={20}\n                    className=\"UsersGrid\"\n                />\n            </div>\n            <Button onClick={handleDeleteAll} color=\"primary\">\n          Delete all\n      </Button>\n        </div>\n    );\n}","import React from \"react\"\nimport { Redirect } from 'react-router-dom';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport config from '../../config';\n\nimport DashboardTabs from './DashboardTabs';\nimport MemoizedUserList from './DashboardUsers';\nimport DashboardFeedback from './DashboardFeedback';\n\nexport default function Dashboard(props) {\n\n    const [currentTab, setCurrentTab] = React.useState(0)\n    const [currentTabContent, setCurrentTabContent] = React.useState(null)\n\n    React.useEffect(() => {\n        const tabContent = () => {\n            switch (currentTab) {\n                case 0:\n                    return <MemoizedUserList />\n                case 1:\n                    return <DashboardFeedback />\n                default:\n                    return <MemoizedUserList />\n            }\n        }\n        setCurrentTabContent (tabContent)\n    }, [currentTab])\n    \n    const { data: isAdmin } = useSWR(config.getRoles)\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    if (!isAdmin) return <BounceLoader color={\"#213459\"} loading={true} css={bounceLoaderCss} size={100} />\n\n    if (!isAdmin.admin) {\n        return <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n    }\n\n    return (\n        <div style={{height: '-webkit-fill-available', padding: '15px'}}>\n            <DashboardTabs currentTab={currentTab} setCurrentTab={setCurrentTab}/>\n            {currentTabContent}\n        </div>\n    )\n}","// React imports\nimport React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n// Authentication imports\nimport { PrivateRoute } from './components/Auth/PrivateRoute';\nimport Login from './components/Auth/Login';\nimport Logout from './components/Auth/Logout';\nimport ResetWithToken from './components/Auth/ResetWithToken';\nimport Reset from './components/Auth/Reset';\nimport SignUp from './components/Auth/SignUp';\nimport ConfirmEmail from './components/Auth/ConfirmEmail';\n\n// App styling\nimport './App.css';\nimport { ThemeProvider, createTheme } from '@mui/material/styles'\nimport CssBaseline from '@mui/material/CssBaseline';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\n// Navigation components\nimport Navbar from './components/Navbar/Navbar';\nimport TopBar from './components/TopBar/TopBar';\n\n// Page components\nimport Home from './components/Home/Home.jsx'\nimport SplashScreen from './components/SplashScreen/SplashScreen';\nimport UserMenu from './components/UserMenu/UserMenu.jsx';\nimport Art from './components/Art/Art';\nimport Contact from './components/Contact/Contact';\nimport Collection from './components/Collection/Collection';\n\n// Admin components\nimport Dashboard from './components/Dashboard/Dashboard';\n\n// Notifications\nimport Snackbar from '@mui/material/Snackbar';\nimport { Alert } from '@mui/material';\n\nexport const SnackbarContext = React.createContext();\n\n\nexport default function App() {\n\n  const [splashScreen, setSplashScreen] = React.useState(true)\n\n  useEffect(() => {\n    setTimeout(() => {\n      setSplashScreen(false)\n    }, 1500);\n  }, []);\n\n  const theme = createTheme({\n    palette: {\n      mode: (useMediaQuery('(prefers-color-scheme: dark)') ? 'dark' : 'light'),\n      primary: {\n        main: '#FD37AA'\n      },\n      secondary: {\n        main: '#CAE8FF'\n      }\n    },\n    typography: {\n      h1: {\n        fontFamily: [\n          'Bona Nova',\n          '-apple-system',\n          'BlinkMacSystemFont',\n          '\"Segoe UI\"',\n          'Roboto',\n          '\"Helvetica Neue\"',\n          'Arial',\n          'sans-serif',\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n        ].join(','),\n      },\n      fontFamily: [\n        'Assistant',\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(',')\n    },\n    components: {\n      MuiTouchRipple: {\n        styleOverrides: {\n          child: {\n            backgroundColor: '#FD37AA'\n          }\n        }\n      }\n    }\n  });\n\n  // Snackbar\n  const [snackbar, setSnackbar] = React.useState({\n    text: '',\n    severity: 'info', // default value\n    open: false,\n  });\n  const handleClose = () => {\n    setSnackbar({ open: false });\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <link rel=\"shortcut icon\" href=\"./favicon.ico\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"true\" />\n        <link href=\"https://fonts.googleapis.com/css2?family=Assistant:wght@200;300;400;500;600&family=Bona+Nova:ital,wght@0,400;0,700;1,400&display=swap\" rel=\"stylesheet\" />\n\n\n        <header className=\"App-header\">\n\n          <SnackbarContext.Provider value={{ snackbar, setSnackbar }}>\n\n            <Snackbar open={snackbar.open} autoHideDuration={6000} onClose={handleClose}>\n              <Alert onClose={handleClose} severity={snackbar.severity}>\n                {snackbar.text}\n              </Alert>\n            </Snackbar>\n\n            {splashScreen ? (<SplashScreen />) : (\n\n              <BrowserRouter>\n\n                <TopBar />\n\n                <div className=\"AppWrapper\">\n\n                  <Switch>\n                    <Route exact path=\"/\"> <Home /> </Route>\n\n                    <Route exact path=\"/art\" component={Art} />\n                    <Route exact path=\"/collection/:collectionId\" component={Collection} />\n\n                    <Route exact path=\"/contact\" component={Contact} />\n\n                    <PrivateRoute exact path=\"/user\" component={UserMenu} />\n\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/logout\" component={Logout} />\n                    <Route exact path=\"/reset\" component={Reset} />\n                    <Route exact path=\"/register\" component={SignUp} />\n                    <Route exact path=\"/confirm/:token\" component={ConfirmEmail} />\n                    <Route exact path=\"/reset/:token\" component={ResetWithToken} />\n\n                    <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                  </Switch>\n\n                </div>\n\n                <Navbar />\n\n              </BrowserRouter>\n            )}\n\n          </SnackbarContext.Provider>\n        </header>\n      </div>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\n\nimport { authenticationService } from '../services';\nimport { refreshToken } from '../helpers';\nimport config from '../config';\n\naxios.interceptors.response.use(\n  (response) => {\n    return response\n  },\n  (error) => {\n    return new Promise((resolve) => {\n      const originalRequest = error.config\n      const refreshTokenString = refreshToken()\n\n      if (error.response && error.response.status === 401 && error.config && !error.config.__isRetryRequest && refreshTokenString) {\n        originalRequest._retry = true\n\n        const response = fetch(config.authRefresh, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${refreshTokenString}`\n          },\n          body: JSON.stringify({\n            refresh: refreshToken,\n          }),\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n            currentUser['access_token'] = data.access_token;\n            authenticationService.updateUser(currentUser);\n\n            window.location.reload();\n          })\n        resolve(response)\n      }\n\n      return Promise.reject(error)\n    })\n  },\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { SWRConfig } from 'swr'\n\nimport './interceptors/axios-interceptor';\nimport { fetcher } from './services';\n\nReactDOM.render(\n\n    <SWRConfig value={{ fetcher }}>\n        <App />\n    </SWRConfig>\n    ,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}